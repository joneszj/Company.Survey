@model Company.Survey.Core.Data.Entities.Survey

@{
    Layout = "_Layout";
    ViewData["Title"] = "Edit Questionnaire";
}

<h1>Edit Questionnaire</h1>
<h2>Title: <span id="@Model.Id">@Model.Title</span> (@Model.Version)</h2>
<div class="row">
    Updates are made in real time and applied to all matching client distributed surveys of this version (Clients with this version: @ViewBag.ClientSurveyCount). To create an identical survey that will update separate from currently distributed client surveys, create a new verion.
</div>
<input type="hidden" id="surveyId" value="@Model.Id" />
<br />
<div class="row">
    <div class="col">
        <button class="btn btn-success">
            Preview Questionnaire
        </button>
        <button class="btn btn-primary"
                onclick="location.href='@Url.Action("NewVersion", "Surveys", new { id = Model.Id, key = Model.SurveyKey })'">
            Create New Version
        </button>
        <button class="btn btn-danger"
                onclick="location.href='@Url.Action("DisableSurvey", "Surveys", new { id = Model.Id })'">
            Disable Survey Version
        </button>
    </div>
</div>
<br />
<div class="row">
    <div class="col">
        <button class="btn btn-primary" data-toggle="modal" data-target="#addStepModal">
            Add Step to Survey
        </button>
    </div>
</div>
<br />
<div class="row">
    <div class="col">
        @foreach (var step in Model.SurveySteps)
        {
            <div class="row bg-secondary text-white pt-2">
                <div class="col form-group">
                    <label>Step Position @(step.Order)</label>
                    <input class="form-control pt-2"
                           id="@step.Id"
                           value="@step.Title"
                           data-order="@(step.Order)"
                           onblur="() => updateStep({ StepContentId: event.target.id, Title: event.target.value })" />
                </div>
            </div>
            <div class="row bg-secondary text-white pb-2">
                <div class="col">
                    <button class="btn btn-primary" data-toggle="modal" data-target="#addQuestionModal">
                        Add Question
                    </button>
                    @if (step.StepContent == null)
                    {
                        <button class="btn btn-primary" data-toggle="modal" data-target="#addStepContentModal" onclick="document.getElementById('stepContentStepId').value = @step.Id">
                            Add Content Section
                        </button>
                    }
                    <button class="btn btn-warning" onclick="removeStepConfirm(@step.Id).then(() => window.location.reload())">
                        Remove Step
                    </button>
                </div>
            </div>
            @if (step.StepContent != null)
            {
                <div class="row p-2">
                    <div class="col">
                        <div class="row">
                            <label>Content Section:</label>
                            <input class="form-control pt-2"
                                   id="@step.StepContent.Id"
                                   value="@step.StepContent.Title"
                                   onblur="updateStepContent({ StepContentId: Number(event.target.id), Title: event.target.value })" />
                        </div>
                        <div class="row">
                            <div class="p-2">
                                <button class="btn btn-primary" data-toggle="modal" data-target="#addContentBlockModal">
                                    Add Block
                                </button>
                            </div>
                            <div class="p-2">
                                <button class="btn btn-warning" onclick="removeStepContentConfirm(@step.StepContent.Id).then(() => window.location.reload())">
                                    Remove Content Section
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                @foreach (var block in step.StepContent.ContentBlocks)
                {
                    <div class="row bg-light" id="@block.Id">
                        <div class="col">
                            <label>Content Block Position: </label>
                            <input class="form-control pt-2"
                                   id="@block.Id"
                                   value="@block.ContentData"
                                   onblur="() => updateContentBlock()" />
                            <button class="btn btn-warning m-2" onclick="removeContentBlock(@block.Id).then(() => window.location.reload())">
                                Remove Block
                            </button>
                        </div>
                    </div>
                }
            }
            <div class="row bg-light">
                <div class="col">
                    @foreach (var question in step.Questions)
                    {
                        @if (question.ParentSurveyQuestion == null)
                        {
                            <hr />
                            <div class="row p-2">
                                <div class="col" id="@question.Id">
                                    <label>Question Position @(question.Order)</label>
                                    <input class="form-control pt-2"
                                           id="@question.Id"
                                           value="@question.Quesiton"
                                           data-order="@question.Order"
                                           onblur="updateQuestion()" />
                                    <button class="btn btn-primary m-2" data-toggle="modal" data-target="#addQuestionModal">
                                        Add Sub-Question
                                    </button>
                                    <button class="btn btn-warning m-2" onclick="removeQuestion({ QuestionId: @question.Id }).then(() => window.location.reload())">
                                        Remove
                                    </button>
                                </div>
                            </div>
                        }
                        @if (question.ParentSurveyQuestion != null)
                        {
                            <div class="col border" id="@question.Id">
                                <label>Sub-Position @(question.Order)</label>
                                <input class="form-control pt-2"
                                       id="@question.Id"
                                       value="@question.Quesiton"
                                       data-order="@question.Order"
                                       data-parent="@question.ParentSurveyQuestionId"
                                       onblur="updateQuestion()" />
                                <button class="btn btn-warning m-2" onclick="removeQuestion({ QuestionId: @question.Id }).then(() => window.location.reload())">
                                    Remove Sub-Question
                                </button>
                            </div>
                        }
                    }
                </div>
            </div>
            <hr />
        }
    </div>
</div>

@await Html.PartialAsync("_AddStep")
@await Html.PartialAsync("_AddStepContent")
@await Html.PartialAsync("_AddContentBlock")
@await Html.PartialAsync("_AddQuestion")