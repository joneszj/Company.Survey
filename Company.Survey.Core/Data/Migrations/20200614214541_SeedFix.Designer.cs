// <auto-generated />
using System;
using Company.Survey.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Company.Survey.Core.Data.Migrations
{
    [DbContext(typeof(CoreContext))]
    [Migration("20200614214541_SeedFix")]
    partial class SeedFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.3.20181.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CompanyName = "Test Company",
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 324, DateTimeKind.Local).AddTicks(3884),
                            Email = "joneszj@gmail.com",
                            FirstName = "Zachary",
                            IsActive = true,
                            LastName = "Jones",
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 329, DateTimeKind.Local).AddTicks(5906),
                            Phone = "555-333-1111"
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.ClientSurveys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<Guid>("ClientSurveyKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SurveyId");

                    b.ToTable("ClientSurveys");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ClientId = -1,
                            ClientSurveyKey = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 330, DateTimeKind.Local).AddTicks(1944),
                            IsActive = true,
                            IsComplete = false,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 330, DateTimeKind.Local).AddTicks(1973),
                            RequestedEndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RequestedStartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SurveyId = -1
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.Content", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StepContentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StepContentId");

                    b.ToTable("Content");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            ContentData = "<img src=\\\"/images/databerrymigrationprocess.jpg\\\" alt=\\\"migration process\\\">",
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 336, DateTimeKind.Local).AddTicks(5977),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 336, DateTimeKind.Local).AddTicks(6021),
                            StepContentId = -1
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.Reply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClientSurveyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReplyData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SurveyQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientSurveyId");

                    b.HasIndex("SurveyQuestionId");

                    b.ToTable("Reply");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(4715),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(4756),
                            ReplyData = "e.g. db1",
                            SurveyQuestionId = -15
                        },
                        new
                        {
                            Id = -2,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7203),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7235),
                            ReplyData = "e.g. AppSI",
                            SurveyQuestionId = -15
                        },
                        new
                        {
                            Id = -3,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7303),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7325),
                            ReplyData = "e.g. Web01",
                            SurveyQuestionId = -15
                        },
                        new
                        {
                            Id = -4,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7348),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7355),
                            ReplyData = "e.g. DC4",
                            SurveyQuestionId = -15
                        },
                        new
                        {
                            Id = -5,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7376),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7395),
                            ReplyData = "Database",
                            SurveyQuestionId = -16
                        },
                        new
                        {
                            Id = -6,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7412),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7430),
                            ReplyData = "Application",
                            SurveyQuestionId = -16
                        },
                        new
                        {
                            Id = -7,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7450),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7460),
                            ReplyData = "Web",
                            SurveyQuestionId = -16
                        },
                        new
                        {
                            Id = -8,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7474),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7482),
                            ReplyData = "Other",
                            SurveyQuestionId = -16
                        },
                        new
                        {
                            Id = -9,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7497),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7515),
                            ReplyData = "Windows 2016",
                            SurveyQuestionId = -17
                        },
                        new
                        {
                            Id = -10,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7534),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7552),
                            ReplyData = "CentOS v7.2",
                            SurveyQuestionId = -17
                        },
                        new
                        {
                            Id = -11,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7575),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7584),
                            ReplyData = "Redhat v7.0",
                            SurveyQuestionId = -17
                        },
                        new
                        {
                            Id = -12,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7604),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7623),
                            ReplyData = "Windows 2016 DC",
                            SurveyQuestionId = -17
                        },
                        new
                        {
                            Id = -13,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7877),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7899),
                            ReplyData = "500GB C:",
                            SurveyQuestionId = -18
                        },
                        new
                        {
                            Id = -14,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7920),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7938),
                            ReplyData = "700GB's each C: &amp; D: ",
                            SurveyQuestionId = -18
                        },
                        new
                        {
                            Id = -15,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7949),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7962),
                            ReplyData = "1TB F:",
                            SurveyQuestionId = -18
                        },
                        new
                        {
                            Id = -16,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7971),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(7987),
                            ReplyData = "2TB each P: &amp; Z:",
                            SurveyQuestionId = -18
                        },
                        new
                        {
                            Id = -17,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8170),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8191),
                            ReplyData = "VM",
                            SurveyQuestionId = -19
                        },
                        new
                        {
                            Id = -18,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8214),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8239),
                            ReplyData = "Physical",
                            SurveyQuestionId = -19
                        },
                        new
                        {
                            Id = -19,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8248),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8272),
                            ReplyData = "VM",
                            SurveyQuestionId = -19
                        },
                        new
                        {
                            Id = -20,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8296),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8311),
                            ReplyData = "Hyper-Visor",
                            SurveyQuestionId = -19
                        },
                        new
                        {
                            Id = -21,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8334),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8355),
                            ReplyData = "e.g. db1",
                            SurveyQuestionId = -20
                        },
                        new
                        {
                            Id = -22,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8368),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8382),
                            ReplyData = "e.g. Web02",
                            SurveyQuestionId = -20
                        },
                        new
                        {
                            Id = -23,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8392),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8409),
                            ReplyData = "MS SQL 2012",
                            SurveyQuestionId = -21
                        },
                        new
                        {
                            Id = -24,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8432),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8454),
                            ReplyData = "MySQL",
                            SurveyQuestionId = -21
                        },
                        new
                        {
                            Id = -25,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8478),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8496),
                            ReplyData = "Sales_DB",
                            SurveyQuestionId = -22
                        },
                        new
                        {
                            Id = -26,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8512),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8534),
                            ReplyData = "Support_DB",
                            SurveyQuestionId = -22
                        },
                        new
                        {
                            Id = -27,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8557),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8573),
                            ReplyData = "C:\\somewhere\\",
                            SurveyQuestionId = -23
                        },
                        new
                        {
                            Id = -28,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8595),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8614),
                            ReplyData = "D:\\somewhere\\",
                            SurveyQuestionId = -23
                        },
                        new
                        {
                            Id = -29,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8623),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8640),
                            ReplyData = "1GB",
                            SurveyQuestionId = -24
                        },
                        new
                        {
                            Id = -30,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8649),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8658),
                            ReplyData = "Physical",
                            SurveyQuestionId = -24
                        },
                        new
                        {
                            Id = -31,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8682),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8702),
                            ReplyData = "e.g. *.mysite.com",
                            SurveyQuestionId = -25
                        },
                        new
                        {
                            Id = -32,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8725),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8748),
                            ReplyData = "e.g. www.mysite.com",
                            SurveyQuestionId = -26
                        },
                        new
                        {
                            Id = -33,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8764),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8781),
                            ReplyData = "Wildcard",
                            SurveyQuestionId = -26
                        },
                        new
                        {
                            Id = -34,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8804),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8826),
                            ReplyData = "single",
                            SurveyQuestionId = -26
                        },
                        new
                        {
                            Id = -35,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8844),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8865),
                            ReplyData = "Web01 C:\\somewhere\\",
                            SurveyQuestionId = -27
                        },
                        new
                        {
                            Id = -36,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8881),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8896),
                            ReplyData = "Web02 D:\\somewhere\\",
                            SurveyQuestionId = -27
                        },
                        new
                        {
                            Id = -37,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8907),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8924),
                            ReplyData = "e.g. www.mysite.com",
                            SurveyQuestionId = -28
                        },
                        new
                        {
                            Id = -38,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8947),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8968),
                            ReplyData = "e.g. my.app.com",
                            SurveyQuestionId = -28
                        },
                        new
                        {
                            Id = -39,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(8992),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9011),
                            ReplyData = "Web01 C:\\somewhere\\",
                            SurveyQuestionId = -29
                        },
                        new
                        {
                            Id = -40,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9026),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9048),
                            ReplyData = "Web01 D:\\somewhere\\",
                            SurveyQuestionId = -29
                        },
                        new
                        {
                            Id = -41,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9071),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9087),
                            ReplyData = "e.g. db1",
                            SurveyQuestionId = -30
                        },
                        new
                        {
                            Id = -42,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9109),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9129),
                            ReplyData = "e.g. AppSI",
                            SurveyQuestionId = -30
                        },
                        new
                        {
                            Id = -43,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9146),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9155),
                            ReplyData = "e.g. Web01",
                            SurveyQuestionId = -30
                        },
                        new
                        {
                            Id = -44,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9168),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9188),
                            ReplyData = "e.g. DC4",
                            SurveyQuestionId = -30
                        },
                        new
                        {
                            Id = -45,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9210),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9231),
                            ReplyData = "Database",
                            SurveyQuestionId = -31
                        },
                        new
                        {
                            Id = -46,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9254),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9266),
                            ReplyData = "Application",
                            SurveyQuestionId = -31
                        },
                        new
                        {
                            Id = -47,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9289),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9310),
                            ReplyData = "Web",
                            SurveyQuestionId = -31
                        },
                        new
                        {
                            Id = -48,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9335),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9351),
                            ReplyData = "Other",
                            SurveyQuestionId = -31
                        },
                        new
                        {
                            Id = -49,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9373),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9388),
                            ReplyData = "Windows 2016",
                            SurveyQuestionId = -32
                        },
                        new
                        {
                            Id = -50,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9403),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9412),
                            ReplyData = "CentOS v7.2",
                            SurveyQuestionId = -32
                        },
                        new
                        {
                            Id = -51,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9429),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9450),
                            ReplyData = "Redhat v7.0",
                            SurveyQuestionId = -32
                        },
                        new
                        {
                            Id = -52,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9474),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9496),
                            ReplyData = "Windows 2016 DC",
                            SurveyQuestionId = -32
                        },
                        new
                        {
                            Id = -53,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9514),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9531),
                            ReplyData = "500GB C:",
                            SurveyQuestionId = -33
                        },
                        new
                        {
                            Id = -55,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9554),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9576),
                            ReplyData = "700GB's each C: &amp; D:",
                            SurveyQuestionId = -33
                        },
                        new
                        {
                            Id = -56,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9593),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9614),
                            ReplyData = "1TB F:",
                            SurveyQuestionId = -33
                        },
                        new
                        {
                            Id = -57,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9631),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9645),
                            ReplyData = "2TB each P: &amp; Z:",
                            SurveyQuestionId = -33
                        },
                        new
                        {
                            Id = -58,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9656),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9673),
                            ReplyData = "VM",
                            SurveyQuestionId = -34
                        },
                        new
                        {
                            Id = -59,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9696),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9716),
                            ReplyData = "Physical",
                            SurveyQuestionId = -34
                        },
                        new
                        {
                            Id = -60,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9739),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9759),
                            ReplyData = "VM",
                            SurveyQuestionId = -34
                        },
                        new
                        {
                            Id = -61,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9773),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(9795),
                            ReplyData = "Hyper-Visor",
                            SurveyQuestionId = -34
                        },
                        new
                        {
                            Id = -62,
                            ClientSurveyId = -1,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 339, DateTimeKind.Local).AddTicks(852),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 339, DateTimeKind.Local).AddTicks(883),
                            ReplyData = "Azure",
                            SurveyQuestionId = -1
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.StepContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SurveyStepId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyStepId")
                        .IsUnique();

                    b.ToTable("StepContent");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 336, DateTimeKind.Local).AddTicks(1695),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 336, DateTimeKind.Local).AddTicks(1723),
                            SurveyStepId = -1,
                            Title = "Databerry Migration Process:"
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.Survey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanySite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfQuestionnaire")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SuveryId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SuveryId", "Version")
                        .IsUnique();

                    b.ToTable("Surveys");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CompanyName = "Databerry",
                            CompanySite = "www.databerry.com",
                            ContactPhone = "855-350-0707",
                            ContactTitle = "Phone",
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 330, DateTimeKind.Local).AddTicks(8096),
                            DateOfQuestionnaire = new DateTime(2020, 6, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 330, DateTimeKind.Local).AddTicks(8141),
                            SuveryId = -1,
                            Title = "Infrastructure Migration Survey Form V8",
                            Version = 8
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.SurveyQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Quesiton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SurveyQuestionGroupID")
                        .HasColumnType("int");

                    b.Property<int>("SurveyStepId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SurveyQuestionGroupID");

                    b.HasIndex("SurveyStepId");

                    b.ToTable("SurveyQuestion");

                    b.HasCheckConstraint("CK_SurveyQuestion_ReplyType_Enum_Constraint", "[ReplyType] IN(N'Text', N'Multiple', N'Select')");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(5719),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(5760),
                            Note = "(e.g. Amazon AWS, Azure, On-Premise)",
                            Order = 0,
                            Quesiton = "Current Hosting Service Provider?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -2,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1516),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1544),
                            Note = "",
                            Order = 2,
                            Quesiton = "Total count of Server(s)?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -3,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1632),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1637),
                            Note = "",
                            Order = 3,
                            Quesiton = "Is there a SAN? (Yes or No)",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -4,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1644),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1648),
                            Note = "",
                            Order = 5,
                            Quesiton = "Total Count of Database(s)?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -5,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1653),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1658),
                            Note = "(e.g. .NET 4.5 | PHP 5.4 | Java 1.5)",
                            Order = 6,
                            Quesiton = "Custom Applications, Applications, Frameworks, | Versions? Please list all Applications types/versions &amp; Names ?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -6,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1664),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1668),
                            Note = "(e.g. Joomla 2.x, Drupal 7.2, WordPress 4.1, QuickBooks v18.0 etc.)",
                            Order = 6,
                            Quesiton = "Are there any Third-party commercial applications or platforms | API’s | Plug-ins?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -7,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1673),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1678),
                            Note = "(Note: VPN will be required if migrating over WAN)",
                            Order = 7,
                            Quesiton = "Active Directory Migration (Yes or No)?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -8,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1684),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1689),
                            Note = "(e.g. iOS Apple swift, Android java, Windows Mobile)",
                            Order = 8,
                            Quesiton = "Are there any Mobile Apps?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -9,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1694),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1698),
                            Note = "(e.g. Authorize.net, PayPal, Stripe, Magento etc.)",
                            Order = 9,
                            Quesiton = "Are there any E-commerce or Payment Gateways Service/platforms involved?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -10,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1704),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1710),
                            Order = 11,
                            Quesiton = "Total SSL Certificate(s)?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -11,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1715),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1720),
                            Note = "(e.g. Webmin v1.89, Plesk v12.5, CPanel v58, Docker v17.x)",
                            Order = 12,
                            Quesiton = "Is there any Server Control Panels installed?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -12,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1726),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1730),
                            Note = "(e.g. IIS 7.0, Apache 2.2, Nginx 1.1)",
                            Order = 14,
                            Quesiton = "List existing Web Server platform &amp; Versions?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -13,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1735),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1740),
                            Note = "(e.g. Sendmail v8.7, PHPmailer, Postfix, MS Exchange v2013, Exim)",
                            Order = 14,
                            Quesiton = "Are there any E-mail platforms or services installed on the Server(s) Type | Version?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -14,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1745),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1750),
                            Note = "(e.g. Google analytics data and/or Environment estimated usage of High, Medium, Low)",
                            Order = 15,
                            Quesiton = "Total Monthly estimated average of Usage Traffic and/or Transactions volume?",
                            ReplyType = "Text",
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -15,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1755),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(1760),
                            Order = 0,
                            Quesiton = "Name of Server",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -1,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -16,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2845),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2864),
                            Order = 1,
                            Quesiton = "Describe the Type of Server",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -1,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -17,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2896),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2902),
                            Order = 2,
                            Quesiton = "OS Type & Version",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -1,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -18,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2908),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2912),
                            Order = 3,
                            Quesiton = "Total Storage of Server in (GB'S TB'S) & amp; Partitions",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -1,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -19,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2917),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2922),
                            Order = 4,
                            Quesiton = "State of Server (Physical, Virtual, Hyper-Visor)",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -1,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -20,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2927),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2932),
                            Order = 0,
                            Quesiton = "DB Server Name",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -2,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -21,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2937),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2942),
                            Order = 1,
                            Quesiton = "DB Engine Type &amp; Version",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -2,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -22,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2947),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2952),
                            Order = 2,
                            Quesiton = "DB Name",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -2,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -23,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2960),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2964),
                            Order = 3,
                            Quesiton = "DB Location",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -2,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -24,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2970),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2974),
                            Order = 4,
                            Quesiton = "Total DB Size in (MB's GB'S TB'S)",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -2,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -25,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2980),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2984),
                            Order = 0,
                            Quesiton = "SSL Name",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -3,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -26,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2990),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(2994),
                            Order = 1,
                            Quesiton = "SSL Type",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -3,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -27,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3000),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3004),
                            Order = 2,
                            Quesiton = "SSL Location (Server Name/Location)",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -3,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -28,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3010),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3014),
                            Order = 0,
                            Quesiton = "Website Name",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -4,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -29,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3019),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3024),
                            Order = 1,
                            Quesiton = "Website Location (Server Name/Location)",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -4,
                            SurveyStepId = -2
                        },
                        new
                        {
                            Id = -30,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3029),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3034),
                            Order = 0,
                            Quesiton = "Name of Server",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -5,
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -31,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3039),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3044),
                            Order = 1,
                            Quesiton = "Describe the Type of Server",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -5,
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -32,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3049),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3054),
                            Order = 2,
                            Quesiton = "OS Type & Version",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -5,
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -33,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3059),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3064),
                            Order = 3,
                            Quesiton = "Total Storage of Server in (GB'S TB'S) & amp; Partitions",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -5,
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -34,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3069),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3074),
                            Order = 4,
                            Quesiton = "State of Server (Physical, Virtual, Hyper-Visor)",
                            ReplyType = "Text",
                            SurveyQuestionGroupID = -5,
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -35,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3079),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3084),
                            Note = "(e.g. Amazon AWS, Azure, On-Premise)",
                            Order = 0,
                            Quesiton = "Moving to Hosting Service Provider?",
                            ReplyType = "Text",
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -36,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3091),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3095),
                            Order = 2,
                            Quesiton = "Is there a SAN? (Yes or No)",
                            ReplyType = "Text",
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -37,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3100),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3104),
                            Note = "(e.g. P= Physical V=Virtual P-P, P-V, V-V, V-P)",
                            Order = 3,
                            Quesiton = "Specify the Type of Migration?",
                            ReplyType = "Text",
                            SurveyStepId = -3
                        },
                        new
                        {
                            Id = -38,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3110),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 338, DateTimeKind.Local).AddTicks(3114),
                            Order = 4,
                            Quesiton = "Please include any additional technical details that you may feel is important that was not covered above:",
                            ReplyType = "Text",
                            SurveyStepId = -3
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.SurveyQuestionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SurveyStepId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyStepId");

                    b.ToTable("SurveyQuestionGroup");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(331),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(361),
                            Order = 1,
                            SurveyStepId = -2,
                            Title = "Specify the number of Source Server(s) to be migrated, Type, OS, Storage, State?"
                        },
                        new
                        {
                            Id = -2,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(2701),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(2722),
                            Note = "(e.g. Microsoft SQL 2014, MariaDB 5.6, MySQL 5.4, Name of DB, size of DB, MB’s, GB’s, TB’s)",
                            Order = 4,
                            SurveyStepId = -2,
                            Title = "Specify the Database Engine Server(s) Type | Version | Name | Size | Quantity?"
                        },
                        new
                        {
                            Id = -3,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(3520),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(3539),
                            Note = "(if Yes please List)",
                            Order = 10,
                            SurveyStepId = -2,
                            Title = "Are there any SSL certificate(s) installed (Type &amp; Location If possible)?"
                        },
                        new
                        {
                            Id = -4,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(3571),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(3576),
                            Order = 13,
                            SurveyStepId = -2,
                            Title = "List the number of Website Names (&amp; Location on Servers if possible)?"
                        },
                        new
                        {
                            Id = -5,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(3868),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 337, DateTimeKind.Local).AddTicks(3877),
                            Order = 1,
                            SurveyStepId = -3,
                            Title = "Specify the number of Source Server(s) to be migrated, Type, OS, Storage, State?"
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.SurveyStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyVersion")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SurveyId", "SurveyVersion");

                    b.ToTable("SurveyStep");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 335, DateTimeKind.Local).AddTicks(3808),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 335, DateTimeKind.Local).AddTicks(3874),
                            Order = 0,
                            SurveyId = -1,
                            SurveyVersion = 8,
                            Title = "Organization/Company &amp; Primary Contact Details: Step A"
                        },
                        new
                        {
                            Id = -2,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 335, DateTimeKind.Local).AddTicks(9831),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 335, DateTimeKind.Local).AddTicks(9885),
                            Order = 1,
                            SurveyId = -1,
                            SurveyVersion = 8,
                            Title = "Source Migration Infrastructure Details: Step B"
                        },
                        new
                        {
                            Id = -3,
                            CreatedBy = "Anonymous",
                            CreatedDate = new DateTime(2020, 6, 14, 17, 45, 39, 336, DateTimeKind.Local).AddTicks(2),
                            IsActive = true,
                            ModifiedBy = "Anonymous",
                            ModifiedDate = new DateTime(2020, 6, 14, 17, 45, 39, 336, DateTimeKind.Local).AddTicks(25),
                            Order = 2,
                            SurveyId = -1,
                            SurveyVersion = 8,
                            Title = "Destination Migration Infrastructure Details: Step C"
                        });
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.ClientSurveys", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.Client", "Client")
                        .WithMany("ClientSurveys")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Survey.Core.Data.Entities.Survey", "Survey")
                        .WithMany("ClientSurveys")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.Content", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.StepContent", "StepContent")
                        .WithMany("ContentBlocks")
                        .HasForeignKey("StepContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.Reply", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.ClientSurveys", "ClientSurvey")
                        .WithMany("ClientQuestionReplies")
                        .HasForeignKey("ClientSurveyId");

                    b.HasOne("Company.Survey.Core.Data.Entities.SurveyQuestion", "SurveyQuestion")
                        .WithMany("PossibleReplies")
                        .HasForeignKey("SurveyQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.StepContent", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.SurveyStep", "SurveyStep")
                        .WithOne("StepContent")
                        .HasForeignKey("Company.Survey.Core.Data.Entities.StepContent", "SurveyStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.SurveyQuestion", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.SurveyQuestionGroup", "SurveyQuestionGroup")
                        .WithMany("SurveyGroupQuestions")
                        .HasForeignKey("SurveyQuestionGroupID");

                    b.HasOne("Company.Survey.Core.Data.Entities.SurveyStep", "SurveyStep")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.SurveyQuestionGroup", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.SurveyStep", "SurveyStep")
                        .WithMany("QuestionGroups")
                        .HasForeignKey("SurveyStepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Survey.Core.Data.Entities.SurveyStep", b =>
                {
                    b.HasOne("Company.Survey.Core.Data.Entities.Survey", "Survey")
                        .WithMany("SurveySteps")
                        .HasForeignKey("SurveyId", "SurveyVersion")
                        .HasPrincipalKey("SuveryId", "Version")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
